From b2c35144a05843d1b19710fb0d48870b97efc8fd Mon Sep 17 00:00:00 2001
From: Vitaly Zaitsev <vitaly@easycoding.org>
Date: Tue, 4 Aug 2020 11:20:07 +0200
Subject: [PATCH] Fixed running benchmarks against packaged version of
 google-benchmark.

Signed-off-by: Vitaly Zaitsev <vitaly@easycoding.org>
---
 benchmark/CMakeLists.txt | 30 ++++++++++++++++++------------
 1 file changed, 18 insertions(+), 12 deletions(-)

diff --git a/benchmark/CMakeLists.txt b/benchmark/CMakeLists.txt
index 3df60b5..dc98764 100644
--- a/benchmark/CMakeLists.txt
+++ b/benchmark/CMakeLists.txt
@@ -1,22 +1,28 @@
-message(STATUS "Installing Google benchmark submodule")
-execute_process(COMMAND git submodule update --init -- google-benchmark
-    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+find_package(benchmark QUIET)
 
-set(BENCHMARK_ENABLE_TESTING OFF CACHE INTERNAL "")
-set(BENCHMARK_ENABLE_INSTALL OFF CACHE INTERNAL "")
-set(BENCHMARK_DOWNLOAD_DEPENDENCIES ON CACHE INTERNAL "")
-set(BENCHMARK_ENABLE_GTEST_TESTS OFF CACHE INTERNAL "")
-add_subdirectory(google-benchmark EXCLUDE_FROM_ALL)
+add_executable(bench
+    bench.cpp benchmark.h
+    bench_int.cpp bench_word.cpp bench_float.cpp
+    bench_return.cpp bench_list.cpp)
+
+if (NOT benchmark_FOUND)
+    message(STATUS "Installing Google benchmark submodule")
+    execute_process(COMMAND git submodule update --init -- google-benchmark
+        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+
+    set(BENCHMARK_ENABLE_TESTING OFF CACHE INTERNAL "")
+    set(BENCHMARK_ENABLE_INSTALL OFF CACHE INTERNAL "")
+    set(BENCHMARK_DOWNLOAD_DEPENDENCIES ON CACHE INTERNAL "")
+    set(BENCHMARK_ENABLE_GTEST_TESTS OFF CACHE INTERNAL "")
+
+    add_subdirectory(google-benchmark EXCLUDE_FROM_ALL)
+endif()
 
 if (SCN_USE_32BIT)
     target_compile_options(benchmark PUBLIC -m32)
     set_target_properties(benchmark PROPERTIES LINK_FLAGS -m32)
 endif ()
 
-add_executable(bench
-    bench.cpp benchmark.h
-    bench_int.cpp bench_word.cpp bench_float.cpp
-    bench_return.cpp bench_list.cpp)
 target_link_libraries(bench scn-header-only benchmark)
 set_private_flags(bench)
 target_compile_features(bench PRIVATE cxx_std_17)
